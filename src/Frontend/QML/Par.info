-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Frontend/QML/Par.y
-----------------------------------------------------------------------------

state 87 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pListToplevel -> ListToplevel               (1)
	%start_pToplevel -> Toplevel                       (2)
	%start_pListArg -> ListArg                         (3)
	%start_pArg -> Arg                                 (4)
	%start_pTypedVar -> TypedVar                       (5)
	%start_pListTypedVar -> ListTypedVar               (6)
	%start_pExpr3 -> Expr3                             (7)
	%start_pExpr2 -> Expr2                             (8)
	%start_pExpr1 -> Expr1                             (9)
	%start_pExpr -> Expr                               (10)
	%start_pListExpr -> ListExpr                       (11)
	%start_pLet -> Let                                 (12)
	%start_pListLet -> ListLet                         (13)
	%start_pComplex -> Complex                         (14)
	%start_pPattern -> Pattern                         (15)
	%start_pType2 -> Type2                             (16)
	%start_pType1 -> Type1                             (17)
	%start_pType -> Type                               (18)
	Ident -> L_ident                                   (19)
	Scalar -> L_Scalar                                 (20)
	Program -> ListToplevel                            (21)
	ListToplevel ->                                    (22)
	ListToplevel -> ListToplevel Toplevel 'end'        (23)
	Toplevel -> 'def' Ident ListArg ':=' Expr          (24)
	Toplevel -> 'def' Ident ListArg '->' Type ':=' Expr   (25)
	ListArg ->                                         (26)
	ListArg -> ListArg Arg                             (27)
	Arg -> '(' ListTypedVar ')'                        (28)
	TypedVar -> Ident ':' Type                         (29)
	ListTypedVar -> TypedVar                           (30)
	ListTypedVar -> TypedVar ',' ListTypedVar          (31)
	Expr3 -> Ident                                     (32)
	Expr3 -> '~1'                                      (33)
	Expr3 -> '~0'                                      (34)
	Expr3 -> '~+'                                      (35)
	Expr3 -> '~-'                                      (36)
	Expr3 -> '~i'                                      (37)
	Expr3 -> '~j'                                      (38)
	Expr3 -> '(' ListExpr ')'                          (39)
	Expr3 -> '[' Complex ']' Expr3                     (40)
	Expr3 -> '(' Expr ')'                              (41)
	Expr2 -> Expr2 Expr3                               (42)
	Expr2 -> Expr3                                     (43)
	Expr1 -> Expr2 '+' Expr1                           (44)
	Expr1 -> 'if째' Expr 'then' Expr 'else' Expr        (45)
	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr        (46)
	Expr1 -> 'if' Expr 'then' Expr 'else' Expr         (47)
	Expr1 -> 'let' '{' ListLet '}' 'in' Expr           (48)
	Expr1 -> Expr2                                     (49)
	Expr -> Expr1                                      (50)
	ListExpr ->                                        (51)
	ListExpr -> Expr                                   (52)
	ListExpr -> Expr ',' ListExpr                      (53)
	Let -> Pattern '=' Expr                            (54)
	ListLet -> Let                                     (55)
	ListLet -> Let ';' ListLet                         (56)
	Complex -> Scalar '+' Scalar 'j'                   (57)
	Complex -> Scalar                                  (58)
	Complex -> Scalar 'j'                              (59)
	Complex -> '-j'                                    (60)
	Complex -> 'j'                                     (61)
	Pattern -> Ident                                   (62)
	Pattern -> '(' Ident ',' Ident ')'                 (63)
	Type2 -> 'qubit'                                   (64)
	Type2 -> 'unit'                                    (65)
	Type2 -> '(' Type ')'                              (66)
	Type1 -> Type2 '*' Type1                           (67)
	Type1 -> Type2                                     (68)
	Type -> Type1                                      (69)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'->'           { PT _ (TS _ 6) }
	'-j'           { PT _ (TS _ 7) }
	':'            { PT _ (TS _ 8) }
	':='           { PT _ (TS _ 9) }
	';'            { PT _ (TS _ 10) }
	'='            { PT _ (TS _ 11) }
	'['            { PT _ (TS _ 12) }
	']'            { PT _ (TS _ 13) }
	'def'          { PT _ (TS _ 14) }
	'else'         { PT _ (TS _ 15) }
	'end'          { PT _ (TS _ 16) }
	'if'           { PT _ (TS _ 17) }
	'if*'          { PT _ (TS _ 18) }
	'if째'          { PT _ (TS _ 19) }
	'in'           { PT _ (TS _ 20) }
	'j'            { PT _ (TS _ 21) }
	'let'          { PT _ (TS _ 22) }
	'qubit'        { PT _ (TS _ 23) }
	'then'         { PT _ (TS _ 24) }
	'unit'         { PT _ (TS _ 25) }
	'{'            { PT _ (TS _ 26) }
	'}'            { PT _ (TS _ 27) }
	'~+'           { PT _ (TS _ 28) }
	'~-'           { PT _ (TS _ 29) }
	'~0'           { PT _ (TS _ 30) }
	'~1'           { PT _ (TS _ 31) }
	'~i'           { PT _ (TS _ 32) }
	'~j'           { PT _ (TS _ 33) }
	L_ident        { PT _ (TV $$) }
	L_Scalar       { PT _ (T_Scalar $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pListToplevel rule  1
	%start_pToplevel rule  2
	%start_pListArg rule  3
	%start_pArg     rule  4
	%start_pTypedVar rule  5
	%start_pListTypedVar rule  6
	%start_pExpr3   rule  7
	%start_pExpr2   rule  8
	%start_pExpr1   rule  9
	%start_pExpr    rule  10
	%start_pListExpr rule  11
	%start_pLet     rule  12
	%start_pListLet rule  13
	%start_pComplex rule  14
	%start_pPattern rule  15
	%start_pType2   rule  16
	%start_pType1   rule  17
	%start_pType    rule  18
	Ident           rule  19
	Scalar          rule  20
	Program         rule  21
	ListToplevel    rules 22, 23
	Toplevel        rules 24, 25
	ListArg         rules 26, 27
	Arg             rule  28
	TypedVar        rule  29
	ListTypedVar    rules 30, 31
	Expr3           rules 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
	Expr2           rules 42, 43
	Expr1           rules 44, 45, 46, 47, 48, 49
	Expr            rule  50
	ListExpr        rules 51, 52, 53
	Let             rule  54
	ListLet         rules 55, 56
	Complex         rules 57, 58, 59, 60, 61
	Pattern         rules 62, 63
	Type2           rules 64, 65, 66
	Type1           rules 67, 68
	Type            rule  69

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'def'          reduce using rule 22
	%eof           reduce using rule 22

	Program        goto state 73
	ListToplevel   goto state 74

State 1


	'def'          reduce using rule 22
	%eof           reduce using rule 22

	ListToplevel   goto state 72

State 2


	'def'          shift, and enter state 71

	Toplevel       goto state 70

State 3


	'('            reduce using rule 26
	%eof           reduce using rule 26

	ListArg        goto state 69

State 4


	'('            shift, and enter state 68

	Arg            goto state 67

State 5


	L_ident        shift, and enter state 20

	Ident          goto state 63
	TypedVar       goto state 66

State 6


	L_ident        shift, and enter state 20

	Ident          goto state 63
	TypedVar       goto state 64
	ListTypedVar   goto state 65

State 7


	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 62

State 8


	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 61

State 9


	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 60

State 10


	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 59

State 11


	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20
	%eof           reduce using rule 51

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 45
	ListExpr       goto state 46

State 12


	'('            shift, and enter state 31
	L_ident        shift, and enter state 20

	Ident          goto state 29
	Let            goto state 40
	Pattern        goto state 39

State 13


	'('            shift, and enter state 31
	L_ident        shift, and enter state 20

	Ident          goto state 29
	Let            goto state 37
	ListLet        goto state 38
	Pattern        goto state 39

State 14


	'-j'           shift, and enter state 34
	'j'            shift, and enter state 35
	L_Scalar       shift, and enter state 36

	Scalar         goto state 32
	Complex        goto state 33

State 15


	'('            shift, and enter state 31
	L_ident        shift, and enter state 20

	Ident          goto state 29
	Pattern        goto state 30

State 16


	'('            shift, and enter state 24
	'qubit'        shift, and enter state 25
	'unit'         shift, and enter state 26

	Type2          goto state 28

State 17


	'('            shift, and enter state 24
	'qubit'        shift, and enter state 25
	'unit'         shift, and enter state 26

	Type2          goto state 21
	Type1          goto state 27

State 18


	'('            shift, and enter state 24
	'qubit'        shift, and enter state 25
	'unit'         shift, and enter state 26

	Type2          goto state 21
	Type1          goto state 22
	Type           goto state 23

State 19


	L_ident        shift, and enter state 20


State 20

	Ident -> L_ident .                                  (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	'+'            reduce using rule 19
	','            reduce using rule 19
	'->'           reduce using rule 19
	':'            reduce using rule 19
	':='           reduce using rule 19
	';'            reduce using rule 19
	'='            reduce using rule 19
	'['            reduce using rule 19
	'else'         reduce using rule 19
	'end'          reduce using rule 19
	'then'         reduce using rule 19
	'}'            reduce using rule 19
	'~+'           reduce using rule 19
	'~-'           reduce using rule 19
	'~0'           reduce using rule 19
	'~1'           reduce using rule 19
	'~i'           reduce using rule 19
	'~j'           reduce using rule 19
	L_ident        reduce using rule 19
	%eof           reduce using rule 19


State 21

	Type1 -> Type2 . '*' Type1                          (rule 67)
	Type1 -> Type2 .                                    (rule 68)

	')'            reduce using rule 68
	'*'            shift, and enter state 97
	','            reduce using rule 68
	':='           reduce using rule 68
	%eof           reduce using rule 68


State 22

	Type -> Type1 .                                     (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	':='           reduce using rule 69
	%eof           reduce using rule 69


State 23

	%start_pType -> Type .                              (rule 18)

	%eof           accept


State 24

	Type2 -> '(' . Type ')'                             (rule 66)

	'('            shift, and enter state 24
	'qubit'        shift, and enter state 25
	'unit'         shift, and enter state 26

	Type2          goto state 21
	Type1          goto state 22
	Type           goto state 96

State 25

	Type2 -> 'qubit' .                                  (rule 64)

	')'            reduce using rule 64
	'*'            reduce using rule 64
	','            reduce using rule 64
	':='           reduce using rule 64
	%eof           reduce using rule 64


State 26

	Type2 -> 'unit' .                                   (rule 65)

	')'            reduce using rule 65
	'*'            reduce using rule 65
	','            reduce using rule 65
	':='           reduce using rule 65
	%eof           reduce using rule 65


State 27

	%start_pType1 -> Type1 .                            (rule 17)

	%eof           accept


State 28

	%start_pType2 -> Type2 .                            (rule 16)

	%eof           accept


State 29

	Pattern -> Ident .                                  (rule 62)

	'='            reduce using rule 62
	%eof           reduce using rule 62


State 30

	%start_pPattern -> Pattern .                        (rule 15)

	%eof           accept


State 31

	Pattern -> '(' . Ident ',' Ident ')'                (rule 63)

	L_ident        shift, and enter state 20

	Ident          goto state 95

State 32

	Complex -> Scalar . '+' Scalar 'j'                  (rule 57)
	Complex -> Scalar .                                 (rule 58)
	Complex -> Scalar . 'j'                             (rule 59)

	'+'            shift, and enter state 93
	']'            reduce using rule 58
	'j'            shift, and enter state 94
	%eof           reduce using rule 58


State 33

	%start_pComplex -> Complex .                        (rule 14)

	%eof           accept


State 34

	Complex -> '-j' .                                   (rule 60)

	']'            reduce using rule 60
	%eof           reduce using rule 60


State 35

	Complex -> 'j' .                                    (rule 61)

	']'            reduce using rule 61
	%eof           reduce using rule 61


State 36

	Scalar -> L_Scalar .                                (rule 20)

	'+'            reduce using rule 20
	']'            reduce using rule 20
	'j'            reduce using rule 20
	%eof           reduce using rule 20


State 37

	ListLet -> Let .                                    (rule 55)
	ListLet -> Let . ';' ListLet                        (rule 56)

	';'            shift, and enter state 92
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 38

	%start_pListLet -> ListLet .                        (rule 13)

	%eof           accept


State 39

	Let -> Pattern . '=' Expr                           (rule 54)

	'='            shift, and enter state 91


State 40

	%start_pLet -> Let .                                (rule 12)

	%eof           accept


State 41

	Expr3 -> Ident .                                    (rule 32)

	'('            reduce using rule 32
	')'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	'['            reduce using rule 32
	'else'         reduce using rule 32
	'end'          reduce using rule 32
	'then'         reduce using rule 32
	'}'            reduce using rule 32
	'~+'           reduce using rule 32
	'~-'           reduce using rule 32
	'~0'           reduce using rule 32
	'~1'           reduce using rule 32
	'~i'           reduce using rule 32
	'~j'           reduce using rule 32
	L_ident        reduce using rule 32
	%eof           reduce using rule 32


State 42

	Expr2 -> Expr3 .                                    (rule 43)

	'('            reduce using rule 43
	')'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'['            reduce using rule 43
	'else'         reduce using rule 43
	'end'          reduce using rule 43
	'then'         reduce using rule 43
	'}'            reduce using rule 43
	'~+'           reduce using rule 43
	'~-'           reduce using rule 43
	'~0'           reduce using rule 43
	'~1'           reduce using rule 43
	'~i'           reduce using rule 43
	'~j'           reduce using rule 43
	L_ident        reduce using rule 43
	%eof           reduce using rule 43


State 43

	Expr2 -> Expr2 . Expr3                              (rule 42)
	Expr1 -> Expr2 . '+' Expr1                          (rule 44)
	Expr1 -> Expr2 .                                    (rule 49)

	'('            shift, and enter state 47
	')'            reduce using rule 49
	'+'            shift, and enter state 90
	','            reduce using rule 49
	';'            reduce using rule 49
	'['            shift, and enter state 48
	'else'         reduce using rule 49
	'end'          reduce using rule 49
	'then'         reduce using rule 49
	'}'            reduce using rule 49
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20
	%eof           reduce using rule 49

	Ident          goto state 41
	Expr3          goto state 81

State 44

	Expr -> Expr1 .                                     (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'else'         reduce using rule 50
	'end'          reduce using rule 50
	'then'         reduce using rule 50
	'}'            reduce using rule 50
	%eof           reduce using rule 50


State 45

	ListExpr -> Expr .                                  (rule 52)
	ListExpr -> Expr . ',' ListExpr                     (rule 53)

	')'            reduce using rule 52
	','            shift, and enter state 89
	%eof           reduce using rule 52


State 46

	%start_pListExpr -> ListExpr .                      (rule 11)

	%eof           accept


State 47

	Expr3 -> '(' . ListExpr ')'                         (rule 39)
	Expr3 -> '(' . Expr ')'                             (rule 41)

	'('            shift, and enter state 47
	')'            reduce using rule 51
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 87
	ListExpr       goto state 88

State 48

	Expr3 -> '[' . Complex ']' Expr3                    (rule 40)

	'-j'           shift, and enter state 34
	'j'            shift, and enter state 35
	L_Scalar       shift, and enter state 36

	Scalar         goto state 32
	Complex        goto state 86

State 49

	Expr1 -> 'if' . Expr 'then' Expr 'else' Expr        (rule 47)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 85

State 50

	Expr1 -> 'if*' . Expr 'then' Expr 'else' Expr       (rule 46)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 84

State 51

	Expr1 -> 'if째' . Expr 'then' Expr 'else' Expr       (rule 45)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 83

State 52

	Expr1 -> 'let' . '{' ListLet '}' 'in' Expr          (rule 48)

	'{'            shift, and enter state 82


State 53

	Expr3 -> '~+' .                                     (rule 35)

	'('            reduce using rule 35
	')'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	'['            reduce using rule 35
	'else'         reduce using rule 35
	'end'          reduce using rule 35
	'then'         reduce using rule 35
	'}'            reduce using rule 35
	'~+'           reduce using rule 35
	'~-'           reduce using rule 35
	'~0'           reduce using rule 35
	'~1'           reduce using rule 35
	'~i'           reduce using rule 35
	'~j'           reduce using rule 35
	L_ident        reduce using rule 35
	%eof           reduce using rule 35


State 54

	Expr3 -> '~-' .                                     (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'['            reduce using rule 36
	'else'         reduce using rule 36
	'end'          reduce using rule 36
	'then'         reduce using rule 36
	'}'            reduce using rule 36
	'~+'           reduce using rule 36
	'~-'           reduce using rule 36
	'~0'           reduce using rule 36
	'~1'           reduce using rule 36
	'~i'           reduce using rule 36
	'~j'           reduce using rule 36
	L_ident        reduce using rule 36
	%eof           reduce using rule 36


State 55

	Expr3 -> '~0' .                                     (rule 34)

	'('            reduce using rule 34
	')'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	'['            reduce using rule 34
	'else'         reduce using rule 34
	'end'          reduce using rule 34
	'then'         reduce using rule 34
	'}'            reduce using rule 34
	'~+'           reduce using rule 34
	'~-'           reduce using rule 34
	'~0'           reduce using rule 34
	'~1'           reduce using rule 34
	'~i'           reduce using rule 34
	'~j'           reduce using rule 34
	L_ident        reduce using rule 34
	%eof           reduce using rule 34


State 56

	Expr3 -> '~1' .                                     (rule 33)

	'('            reduce using rule 33
	')'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	'['            reduce using rule 33
	'else'         reduce using rule 33
	'end'          reduce using rule 33
	'then'         reduce using rule 33
	'}'            reduce using rule 33
	'~+'           reduce using rule 33
	'~-'           reduce using rule 33
	'~0'           reduce using rule 33
	'~1'           reduce using rule 33
	'~i'           reduce using rule 33
	'~j'           reduce using rule 33
	L_ident        reduce using rule 33
	%eof           reduce using rule 33


State 57

	Expr3 -> '~i' .                                     (rule 37)

	'('            reduce using rule 37
	')'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	'['            reduce using rule 37
	'else'         reduce using rule 37
	'end'          reduce using rule 37
	'then'         reduce using rule 37
	'}'            reduce using rule 37
	'~+'           reduce using rule 37
	'~-'           reduce using rule 37
	'~0'           reduce using rule 37
	'~1'           reduce using rule 37
	'~i'           reduce using rule 37
	'~j'           reduce using rule 37
	L_ident        reduce using rule 37
	%eof           reduce using rule 37


State 58

	Expr3 -> '~j' .                                     (rule 38)

	'('            reduce using rule 38
	')'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	'['            reduce using rule 38
	'else'         reduce using rule 38
	'end'          reduce using rule 38
	'then'         reduce using rule 38
	'}'            reduce using rule 38
	'~+'           reduce using rule 38
	'~-'           reduce using rule 38
	'~0'           reduce using rule 38
	'~1'           reduce using rule 38
	'~i'           reduce using rule 38
	'~j'           reduce using rule 38
	L_ident        reduce using rule 38
	%eof           reduce using rule 38


State 59

	%start_pExpr -> Expr .                              (rule 10)

	%eof           accept


State 60

	%start_pExpr1 -> Expr1 .                            (rule 9)

	%eof           accept


State 61

	%start_pExpr2 -> Expr2 .                            (rule 8)
	Expr2 -> Expr2 . Expr3                              (rule 42)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20
	%eof           accept

	Ident          goto state 41
	Expr3          goto state 81

State 62

	%start_pExpr3 -> Expr3 .                            (rule 7)

	%eof           accept


State 63

	TypedVar -> Ident . ':' Type                        (rule 29)

	':'            shift, and enter state 80


State 64

	ListTypedVar -> TypedVar .                          (rule 30)
	ListTypedVar -> TypedVar . ',' ListTypedVar         (rule 31)

	')'            reduce using rule 30
	','            shift, and enter state 79
	%eof           reduce using rule 30


State 65

	%start_pListTypedVar -> ListTypedVar .              (rule 6)

	%eof           accept


State 66

	%start_pTypedVar -> TypedVar .                      (rule 5)

	%eof           accept


State 67

	%start_pArg -> Arg .                                (rule 4)

	%eof           accept


State 68

	Arg -> '(' . ListTypedVar ')'                       (rule 28)

	L_ident        shift, and enter state 20

	Ident          goto state 63
	TypedVar       goto state 64
	ListTypedVar   goto state 78

State 69

	%start_pListArg -> ListArg .                        (rule 3)
	ListArg -> ListArg . Arg                            (rule 27)

	'('            shift, and enter state 68
	%eof           accept

	Arg            goto state 77

State 70

	%start_pToplevel -> Toplevel .                      (rule 2)

	%eof           accept


State 71

	Toplevel -> 'def' . Ident ListArg ':=' Expr         (rule 24)
	Toplevel -> 'def' . Ident ListArg '->' Type ':=' Expr    (rule 25)

	L_ident        shift, and enter state 20

	Ident          goto state 76

State 72

	%start_pListToplevel -> ListToplevel .              (rule 1)
	ListToplevel -> ListToplevel . Toplevel 'end'       (rule 23)

	'def'          shift, and enter state 71
	%eof           accept

	Toplevel       goto state 75

State 73

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 74

	Program -> ListToplevel .                           (rule 21)
	ListToplevel -> ListToplevel . Toplevel 'end'       (rule 23)

	'def'          shift, and enter state 71
	%eof           reduce using rule 21

	Toplevel       goto state 75

State 75

	ListToplevel -> ListToplevel Toplevel . 'end'       (rule 23)

	'end'          shift, and enter state 117


State 76

	Toplevel -> 'def' Ident . ListArg ':=' Expr         (rule 24)
	Toplevel -> 'def' Ident . ListArg '->' Type ':=' Expr    (rule 25)

	'('            reduce using rule 26
	'->'           reduce using rule 26
	':='           reduce using rule 26

	ListArg        goto state 116

State 77

	ListArg -> ListArg Arg .                            (rule 27)

	'('            reduce using rule 27
	'->'           reduce using rule 27
	':='           reduce using rule 27
	%eof           reduce using rule 27


State 78

	Arg -> '(' ListTypedVar . ')'                       (rule 28)

	')'            shift, and enter state 115


State 79

	ListTypedVar -> TypedVar ',' . ListTypedVar         (rule 31)

	L_ident        shift, and enter state 20

	Ident          goto state 63
	TypedVar       goto state 64
	ListTypedVar   goto state 114

State 80

	TypedVar -> Ident ':' . Type                        (rule 29)

	'('            shift, and enter state 24
	'qubit'        shift, and enter state 25
	'unit'         shift, and enter state 26

	Type2          goto state 21
	Type1          goto state 22
	Type           goto state 113

State 81

	Expr2 -> Expr2 Expr3 .                              (rule 42)

	'('            reduce using rule 42
	')'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'['            reduce using rule 42
	'else'         reduce using rule 42
	'end'          reduce using rule 42
	'then'         reduce using rule 42
	'}'            reduce using rule 42
	'~+'           reduce using rule 42
	'~-'           reduce using rule 42
	'~0'           reduce using rule 42
	'~1'           reduce using rule 42
	'~i'           reduce using rule 42
	'~j'           reduce using rule 42
	L_ident        reduce using rule 42
	%eof           reduce using rule 42


State 82

	Expr1 -> 'let' '{' . ListLet '}' 'in' Expr          (rule 48)

	'('            shift, and enter state 31
	L_ident        shift, and enter state 20

	Ident          goto state 29
	Let            goto state 37
	ListLet        goto state 112
	Pattern        goto state 39

State 83

	Expr1 -> 'if째' Expr . 'then' Expr 'else' Expr       (rule 45)

	'then'         shift, and enter state 111


State 84

	Expr1 -> 'if*' Expr . 'then' Expr 'else' Expr       (rule 46)

	'then'         shift, and enter state 110


State 85

	Expr1 -> 'if' Expr . 'then' Expr 'else' Expr        (rule 47)

	'then'         shift, and enter state 109


State 86

	Expr3 -> '[' Complex . ']' Expr3                    (rule 40)

	']'            shift, and enter state 108


State 87

	Expr3 -> '(' Expr . ')'                             (rule 41)
	ListExpr -> Expr .                                  (rule 52)
	ListExpr -> Expr . ',' ListExpr                     (rule 53)

	')'            shift, and enter state 107
			(reduce using rule 52)

	','            shift, and enter state 89


State 88

	Expr3 -> '(' ListExpr . ')'                         (rule 39)

	')'            shift, and enter state 106


State 89

	ListExpr -> Expr ',' . ListExpr                     (rule 53)

	'('            shift, and enter state 47
	')'            reduce using rule 51
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20
	%eof           reduce using rule 51

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 45
	ListExpr       goto state 105

State 90

	Expr1 -> Expr2 '+' . Expr1                          (rule 44)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 104

State 91

	Let -> Pattern '=' . Expr                           (rule 54)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 103

State 92

	ListLet -> Let ';' . ListLet                        (rule 56)

	'('            shift, and enter state 31
	L_ident        shift, and enter state 20

	Ident          goto state 29
	Let            goto state 37
	ListLet        goto state 102
	Pattern        goto state 39

State 93

	Complex -> Scalar '+' . Scalar 'j'                  (rule 57)

	L_Scalar       shift, and enter state 36

	Scalar         goto state 101

State 94

	Complex -> Scalar 'j' .                             (rule 59)

	']'            reduce using rule 59
	%eof           reduce using rule 59


State 95

	Pattern -> '(' Ident . ',' Ident ')'                (rule 63)

	','            shift, and enter state 100


State 96

	Type2 -> '(' Type . ')'                             (rule 66)

	')'            shift, and enter state 99


State 97

	Type1 -> Type2 '*' . Type1                          (rule 67)

	'('            shift, and enter state 24
	'qubit'        shift, and enter state 25
	'unit'         shift, and enter state 26

	Type2          goto state 21
	Type1          goto state 98

State 98

	Type1 -> Type2 '*' Type1 .                          (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	':='           reduce using rule 67
	%eof           reduce using rule 67


State 99

	Type2 -> '(' Type ')' .                             (rule 66)

	')'            reduce using rule 66
	'*'            reduce using rule 66
	','            reduce using rule 66
	':='           reduce using rule 66
	%eof           reduce using rule 66


State 100

	Pattern -> '(' Ident ',' . Ident ')'                (rule 63)

	L_ident        shift, and enter state 20

	Ident          goto state 126

State 101

	Complex -> Scalar '+' Scalar . 'j'                  (rule 57)

	'j'            shift, and enter state 125


State 102

	ListLet -> Let ';' ListLet .                        (rule 56)

	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 103

	Let -> Pattern '=' Expr .                           (rule 54)

	';'            reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 104

	Expr1 -> Expr2 '+' Expr1 .                          (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'else'         reduce using rule 44
	'end'          reduce using rule 44
	'then'         reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 105

	ListExpr -> Expr ',' ListExpr .                     (rule 53)

	')'            reduce using rule 53
	%eof           reduce using rule 53


State 106

	Expr3 -> '(' ListExpr ')' .                         (rule 39)

	'('            reduce using rule 39
	')'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	'['            reduce using rule 39
	'else'         reduce using rule 39
	'end'          reduce using rule 39
	'then'         reduce using rule 39
	'}'            reduce using rule 39
	'~+'           reduce using rule 39
	'~-'           reduce using rule 39
	'~0'           reduce using rule 39
	'~1'           reduce using rule 39
	'~i'           reduce using rule 39
	'~j'           reduce using rule 39
	L_ident        reduce using rule 39
	%eof           reduce using rule 39


State 107

	Expr3 -> '(' Expr ')' .                             (rule 41)

	'('            reduce using rule 41
	')'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'['            reduce using rule 41
	'else'         reduce using rule 41
	'end'          reduce using rule 41
	'then'         reduce using rule 41
	'}'            reduce using rule 41
	'~+'           reduce using rule 41
	'~-'           reduce using rule 41
	'~0'           reduce using rule 41
	'~1'           reduce using rule 41
	'~i'           reduce using rule 41
	'~j'           reduce using rule 41
	L_ident        reduce using rule 41
	%eof           reduce using rule 41


State 108

	Expr3 -> '[' Complex ']' . Expr3                    (rule 40)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 124

State 109

	Expr1 -> 'if' Expr 'then' . Expr 'else' Expr        (rule 47)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 123

State 110

	Expr1 -> 'if*' Expr 'then' . Expr 'else' Expr       (rule 46)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 122

State 111

	Expr1 -> 'if째' Expr 'then' . Expr 'else' Expr       (rule 45)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 121

State 112

	Expr1 -> 'let' '{' ListLet . '}' 'in' Expr          (rule 48)

	'}'            shift, and enter state 120


State 113

	TypedVar -> Ident ':' Type .                        (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	%eof           reduce using rule 29


State 114

	ListTypedVar -> TypedVar ',' ListTypedVar .         (rule 31)

	')'            reduce using rule 31
	%eof           reduce using rule 31


State 115

	Arg -> '(' ListTypedVar ')' .                       (rule 28)

	'('            reduce using rule 28
	'->'           reduce using rule 28
	':='           reduce using rule 28
	%eof           reduce using rule 28


State 116

	Toplevel -> 'def' Ident ListArg . ':=' Expr         (rule 24)
	Toplevel -> 'def' Ident ListArg . '->' Type ':=' Expr    (rule 25)
	ListArg -> ListArg . Arg                            (rule 27)

	'('            shift, and enter state 68
	'->'           shift, and enter state 118
	':='           shift, and enter state 119

	Arg            goto state 77

State 117

	ListToplevel -> ListToplevel Toplevel 'end' .       (rule 23)

	'def'          reduce using rule 23
	%eof           reduce using rule 23


State 118

	Toplevel -> 'def' Ident ListArg '->' . Type ':=' Expr    (rule 25)

	'('            shift, and enter state 24
	'qubit'        shift, and enter state 25
	'unit'         shift, and enter state 26

	Type2          goto state 21
	Type1          goto state 22
	Type           goto state 133

State 119

	Toplevel -> 'def' Ident ListArg ':=' . Expr         (rule 24)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 132

State 120

	Expr1 -> 'let' '{' ListLet '}' . 'in' Expr          (rule 48)

	'in'           shift, and enter state 131


State 121

	Expr1 -> 'if째' Expr 'then' Expr . 'else' Expr       (rule 45)

	'else'         shift, and enter state 130


State 122

	Expr1 -> 'if*' Expr 'then' Expr . 'else' Expr       (rule 46)

	'else'         shift, and enter state 129


State 123

	Expr1 -> 'if' Expr 'then' Expr . 'else' Expr        (rule 47)

	'else'         shift, and enter state 128


State 124

	Expr3 -> '[' Complex ']' Expr3 .                    (rule 40)

	'('            reduce using rule 40
	')'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	'['            reduce using rule 40
	'else'         reduce using rule 40
	'end'          reduce using rule 40
	'then'         reduce using rule 40
	'}'            reduce using rule 40
	'~+'           reduce using rule 40
	'~-'           reduce using rule 40
	'~0'           reduce using rule 40
	'~1'           reduce using rule 40
	'~i'           reduce using rule 40
	'~j'           reduce using rule 40
	L_ident        reduce using rule 40
	%eof           reduce using rule 40


State 125

	Complex -> Scalar '+' Scalar 'j' .                  (rule 57)

	']'            reduce using rule 57
	%eof           reduce using rule 57


State 126

	Pattern -> '(' Ident ',' Ident . ')'                (rule 63)

	')'            shift, and enter state 127


State 127

	Pattern -> '(' Ident ',' Ident ')' .                (rule 63)

	'='            reduce using rule 63
	%eof           reduce using rule 63


State 128

	Expr1 -> 'if' Expr 'then' Expr 'else' . Expr        (rule 47)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 138

State 129

	Expr1 -> 'if*' Expr 'then' Expr 'else' . Expr       (rule 46)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 137

State 130

	Expr1 -> 'if째' Expr 'then' Expr 'else' . Expr       (rule 45)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 136

State 131

	Expr1 -> 'let' '{' ListLet '}' 'in' . Expr          (rule 48)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 135

State 132

	Toplevel -> 'def' Ident ListArg ':=' Expr .         (rule 24)

	'end'          reduce using rule 24
	%eof           reduce using rule 24


State 133

	Toplevel -> 'def' Ident ListArg '->' Type . ':=' Expr    (rule 25)

	':='           shift, and enter state 134


State 134

	Toplevel -> 'def' Ident ListArg '->' Type ':=' . Expr    (rule 25)

	'('            shift, and enter state 47
	'['            shift, and enter state 48
	'if'           shift, and enter state 49
	'if*'          shift, and enter state 50
	'if째'          shift, and enter state 51
	'let'          shift, and enter state 52
	'~+'           shift, and enter state 53
	'~-'           shift, and enter state 54
	'~0'           shift, and enter state 55
	'~1'           shift, and enter state 56
	'~i'           shift, and enter state 57
	'~j'           shift, and enter state 58
	L_ident        shift, and enter state 20

	Ident          goto state 41
	Expr3          goto state 42
	Expr2          goto state 43
	Expr1          goto state 44
	Expr           goto state 139

State 135

	Expr1 -> 'let' '{' ListLet '}' 'in' Expr .          (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'else'         reduce using rule 48
	'end'          reduce using rule 48
	'then'         reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 136

	Expr1 -> 'if째' Expr 'then' Expr 'else' Expr .       (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'else'         reduce using rule 45
	'end'          reduce using rule 45
	'then'         reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 137

	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr .       (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'else'         reduce using rule 46
	'end'          reduce using rule 46
	'then'         reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 138

	Expr1 -> 'if' Expr 'then' Expr 'else' Expr .        (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'else'         reduce using rule 47
	'end'          reduce using rule 47
	'then'         reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 139

	Toplevel -> 'def' Ident ListArg '->' Type ':=' Expr .    (rule 25)

	'end'          reduce using rule 25
	%eof           reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 70
Number of terminals: 35
Number of non-terminals: 40
Number of states: 140
